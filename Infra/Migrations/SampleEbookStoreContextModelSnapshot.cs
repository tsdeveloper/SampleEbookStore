// <auto-generated />
using Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infra.Migrations
{
    [DbContext(typeof(SampleEbookStoreContext))]
    partial class SampleEbookStoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Core.Entities.Assunto", b =>
                {
                    b.Property<int>("CodAs")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodAs"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("CodAs");

                    b.ToTable("Assunto");
                });

            modelBuilder.Entity("Core.Entities.Autor", b =>
                {
                    b.Property<int>("CodAu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodAu"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("CodAu");

                    b.ToTable("Autor");
                });

            modelBuilder.Entity("Core.Entities.Livro", b =>
                {
                    b.Property<int>("CodL")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodL"));

                    b.Property<string>("AnoPublicacao")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int>("Edicao")
                        .HasColumnType("int");

                    b.Property<string>("Editora")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("CodL");

                    b.ToTable("Livro");
                });

            modelBuilder.Entity("Core.Entities.Livro_Assunto", b =>
                {
                    b.Property<int>("Livro_CodL")
                        .HasColumnType("int");

                    b.Property<int>("Assunto_CodAs")
                        .HasColumnType("int");

                    b.HasKey("Livro_CodL", "Assunto_CodAs");

                    b.HasIndex("Assunto_CodAs");

                    b.ToTable("Livro_Assunto");
                });

            modelBuilder.Entity("Core.Entities.Livro_Autor", b =>
                {
                    b.Property<int>("Autor_CodAu")
                        .HasColumnType("int");

                    b.Property<int>("Livro_CodL")
                        .HasColumnType("int");

                    b.HasKey("Autor_CodAu", "Livro_CodL");

                    b.HasIndex("Livro_CodL");

                    b.ToTable("Livro_Autor");
                });

            modelBuilder.Entity("Core.Entities.Livro_Assunto", b =>
                {
                    b.HasOne("Core.Entities.Assunto", "Assunto")
                        .WithMany("Livro_AssuntoList")
                        .HasForeignKey("Assunto_CodAs")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Livro", "Livro")
                        .WithMany("Livro_AssuntoList")
                        .HasForeignKey("Livro_CodL")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assunto");

                    b.Navigation("Livro");
                });

            modelBuilder.Entity("Core.Entities.Livro_Autor", b =>
                {
                    b.HasOne("Core.Entities.Autor", "Autor")
                        .WithMany("Livro_AutorList")
                        .HasForeignKey("Autor_CodAu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Livro", "Livro")
                        .WithMany("Livro_AutorList")
                        .HasForeignKey("Livro_CodL")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor");

                    b.Navigation("Livro");
                });

            modelBuilder.Entity("Core.Entities.Assunto", b =>
                {
                    b.Navigation("Livro_AssuntoList");
                });

            modelBuilder.Entity("Core.Entities.Autor", b =>
                {
                    b.Navigation("Livro_AutorList");
                });

            modelBuilder.Entity("Core.Entities.Livro", b =>
                {
                    b.Navigation("Livro_AssuntoList");

                    b.Navigation("Livro_AutorList");
                });
#pragma warning restore 612, 618
        }
    }
}
